2022-01-27T20:00:59.040Z INFO webdriver: Initiate new session using the WebDriver protocol
2022-01-27T20:00:59.044Z INFO webdriver: [POST] http://127.0.0.1:9515/session
2022-01-27T20:00:59.044Z INFO webdriver: DATA { capabilities:
   { alwaysMatch: { 'goog:chromeOptions': [Object] },
     firstMatch: [ {} ] },
  desiredCapabilities:
   { 'goog:chromeOptions':
      { binary:
         '/Users/ktrinh/fret/sqa9/fret-electron/node_modules/spectron/lib/launcher.js',
        args: [Array],
        debuggerAddress: undefined,
        windowTypes: [Array] } } }
2022-01-27T20:01:01.709Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:01.710Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/execute/sync
2022-01-27T20:01:01.710Z INFO webdriver: DATA { script:
   'return (function (requireName) {\n    return typeof window[requireName] === \'function\';\n  }).apply(null, arguments)',
  args: [ 'require' ] }
2022-01-27T20:01:02.485Z INFO webdriver: RESULT true
2022-01-27T20:01:02.485Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:02.486Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/execute/sync
2022-01-27T20:01:02.486Z INFO webdriver: DATA { script:
   'return (function (requireName) {\n    const process = window[requireName](\'process\');\n    if (process != null && process.versions != null) {\n      return process.versions.electron;\n    }\n  }).apply(null, arguments)',
  args: [ 'require' ] }
2022-01-27T20:01:02.490Z INFO webdriver: RESULT 11.5.0
2022-01-27T20:01:02.490Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:02.490Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/execute/sync
2022-01-27T20:01:02.490Z INFO webdriver: DATA { script:
   'return (function (requireName) {\n    if (typeof window[requireName] !== \'function\') {\n      throw new Error(\n        \'Could not find global require method with name: \' + requireName\n      );\n    }\n    const electron = window[requireName](\'electron\');\n    const process = window[requireName](\'process\');\n\n    const api = {\n      browserWindow: {},\n      electron: {},\n      rendererProcess: {},\n      webContents: {}\n    };\n\n    function ignoreModule(moduleName) {\n      switch (moduleName) {\n        case \'CallbacksRegistry\':\n        case \'deprecate\':\n        case \'deprecations\':\n        case \'hideInternalModules\':\n        case \'Tray\':\n          return true;\n        case \'inAppPurchase\':\n          return process.platform !== \'darwin\';\n      }\n      return false;\n    }\n\n    function isRemoteFunction(name) {\n      switch (name) {\n        case \'BrowserWindow\':\n        case \'Menu\':\n        case \'MenuItem\':\n          return false;\n      }\n      return typeof electron.remote[name] === \'function\';\n    }\n\n    function ignoreApi(apiName) {\n      switch (apiName) {\n        case \'prototype\':\n          return true;\n        default:\n          return apiName[0] === \'_\';\n      }\n    }\n\n    function addModule(parent, parentName, name, api) {\n      api[name] = {};\n      for (const key in parent[name]) {\n        if (ignoreApi(key)) continue;\n        api[name][key] = parentName + \'.\' + name + \'.\' + key;\n      }\n    }\n\n    function addRenderProcessModules() {\n      Object.getOwnPropertyNames(electron).forEach(function (key) {\n        if (ignoreModule(key)) return;\n        if (key === \'remote\') return;\n        addModule(electron, \'electron\', key, api.electron);\n      });\n    }\n\n    function addMainProcessModules() {\n      api.electron.remote = {};\n      Object.getOwnPropertyNames(electron.remote).forEach(function (key) {\n        if (ignoreModule(key)) return;\n        if (isRemoteFunction(key)) {\n          api.electron.remote[key] = \'electron.remote.\' + key;\n        } else {\n          addModule(\n            electron.remote,\n            \'electron.remote\',\n            key,\n            api.electron.remote\n          );\n        }\n      });\n      addModule(\n        electron.remote,\n        \'electron.remote\',\n        \'process\',\n        api.electron.remote\n      );\n    }\n\n    function addBrowserWindow() {\n      const currentWindow = electron.remote.getCurrentWindow();\n      for (const name in currentWindow) {\n        if (ignoreApi(name)) continue;\n        const value = currentWindow[name];\n        if (typeof value === \'function\') {\n          api.browserWindow[name] = \'browserWindow.\' + name;\n        }\n      }\n    }\n\n    function addWebContents() {\n      const webContents = electron.remote.getCurrentWebContents();\n      for (const name in webContents) {\n        if (ignoreApi(name)) continue;\n        const value = webContents[name];\n        if (typeof value === \'function\') {\n          api.webContents[name] = \'webContents.\' + name;\n        }\n      }\n    }\n\n    function addProcess() {\n      if (typeof process !== \'object\') return;\n\n      for (const name in process) {\n        if (ignoreApi(name)) continue;\n        api.rendererProcess[name] = \'process.\' + name;\n      }\n    }\n\n    addRenderProcessModules();\n    addMainProcessModules();\n    addBrowserWindow();\n    addWebContents();\n    addProcess();\n\n    return api;\n  }).apply(null, arguments)',
  args: [ 'require' ] }
2022-01-27T20:01:02.529Z INFO webdriver: RESULT { browserWindow:
   { addBrowserView: 'browserWindow.addBrowserView',
     addListener: 'browserWindow.addListener',
     addTabbedWindow: 'browserWindow.addTabbedWindow',
     blur: 'browserWindow.blur',
     blurWebView: 'browserWindow.blurWebView',
     capturePage: 'browserWindow.capturePage',
     center: 'browserWindow.center',
     close: 'browserWindow.close',
     closeDevTools: 'browserWindow.closeDevTools',
     closeFilePreview: 'browserWindow.closeFilePreview',
     destroy: 'browserWindow.destroy',
     emit: 'browserWindow.emit',
     eventNames: 'browserWindow.eventNames',
     flashFrame: 'browserWindow.flashFrame',
     focus: 'browserWindow.focus',
     focusOnWebView: 'browserWindow.focusOnWebView',
     getBackgroundColor: 'browserWindow.getBackgroundColor',
     getBackgroundThrottling: 'browserWindow.getBackgroundThrottling',
     getBounds: 'browserWindow.getBounds',
     getBrowserView: 'browserWindow.getBrowserView',
     getBrowserViews: 'browserWindow.getBrowserViews',
     getChildWindows: 'browserWindow.getChildWindows',
     getContentBounds: 'browserWindow.getContentBounds',
     getContentSize: 'browserWindow.getContentSize',
     getContentView: 'browserWindow.getContentView',
     getMaxListeners: 'browserWindow.getMaxListeners',
     getMaximumSize: 'browserWindow.getMaximumSize',
     getMediaSourceId: 'browserWindow.getMediaSourceId',
     getMinimumSize: 'browserWindow.getMinimumSize',
     getNativeWindowHandle: 'browserWindow.getNativeWindowHandle',
     getNormalBounds: 'browserWindow.getNormalBounds',
     getOpacity: 'browserWindow.getOpacity',
     getParentWindow: 'browserWindow.getParentWindow',
     getPosition: 'browserWindow.getPosition',
     getRepresentedFilename: 'browserWindow.getRepresentedFilename',
     getSize: 'browserWindow.getSize',
     getTitle: 'browserWindow.getTitle',
     getTrafficLightPosition: 'browserWindow.getTrafficLightPosition',
     getURL: 'browserWindow.getURL',
     hasShadow: 'browserWindow.hasShadow',
     hide: 'browserWindow.hide',
     inspectElement: 'browserWindow.inspectElement',
     inspectServiceWorker: 'browserWindow.inspectServiceWorker',
     inspectSharedWorker: 'browserWindow.inspectSharedWorker',
     isAlwaysOnTop: 'browserWindow.isAlwaysOnTop',
     isClosable: 'browserWindow.isClosable',
     isDestroyed: 'browserWindow.isDestroyed',
     isDevToolsFocused: 'browserWindow.isDevToolsFocused',
     isDevToolsOpened: 'browserWindow.isDevToolsOpened',
     isDocumentEdited: 'browserWindow.isDocumentEdited',
     isEnabled: 'browserWindow.isEnabled',
     isFocused: 'browserWindow.isFocused',
     isFullScreen: 'browserWindow.isFullScreen',
     isFullScreenable: 'browserWindow.isFullScreenable',
     isKiosk: 'browserWindow.isKiosk',
     isMaximizable: 'browserWindow.isMaximizable',
     isMaximized: 'browserWindow.isMaximized',
     isMenuBarAutoHide: 'browserWindow.isMenuBarAutoHide',
     isMenuBarVisible: 'browserWindow.isMenuBarVisible',
     isMinimizable: 'browserWindow.isMinimizable',
     isMinimized: 'browserWindow.isMinimized',
     isModal: 'browserWindow.isModal',
     isMovable: 'browserWindow.isMovable',
     isNormal: 'browserWindow.isNormal',
     isResizable: 'browserWindow.isResizable',
     isSimpleFullScreen: 'browserWindow.isSimpleFullScreen',
     isVisible: 'browserWindow.isVisible',
     isVisibleOnAllWorkspaces: 'browserWindow.isVisibleOnAllWorkspaces',
     isWebViewFocused: 'browserWindow.isWebViewFocused',
     listenerCount: 'browserWindow.listenerCount',
     listeners: 'browserWindow.listeners',
     loadFile: 'browserWindow.loadFile',
     loadURL: 'browserWindow.loadURL',
     maximize: 'browserWindow.maximize',
     mergeAllWindows: 'browserWindow.mergeAllWindows',
     minimize: 'browserWindow.minimize',
     moveAbove: 'browserWindow.moveAbove',
     moveTabToNewWindow: 'browserWindow.moveTabToNewWindow',
     moveTop: 'browserWindow.moveTop',
     off: 'browserWindow.off',
     on: 'browserWindow.on',
     once: 'browserWindow.once',
     openDevTools: 'browserWindow.openDevTools',
     prependListener: 'browserWindow.prependListener',
     prependOnceListener: 'browserWindow.prependOnceListener',
     previewFile: 'browserWindow.previewFile',
     rawListeners: 'browserWindow.rawListeners',
     reload: 'browserWindow.reload',
     removeAllListeners: 'browserWindow.removeAllListeners',
     removeBrowserView: 'browserWindow.removeBrowserView',
     removeListener: 'browserWindow.removeListener',
     removeMenu: 'browserWindow.removeMenu',
     restore: 'browserWindow.restore',
     selectNextTab: 'browserWindow.selectNextTab',
     selectPreviousTab: 'browserWindow.selectPreviousTab',
     send: 'browserWindow.send',
     setAlwaysOnTop: 'browserWindow.setAlwaysOnTop',
     setAspectRatio: 'browserWindow.setAspectRatio',
     setAutoHideCursor: 'browserWindow.setAutoHideCursor',
     setAutoHideMenuBar: 'browserWindow.setAutoHideMenuBar',
     setBackgroundColor: 'browserWindow.setBackgroundColor',
     setBackgroundThrottling: 'browserWindow.setBackgroundThrottling',
     setBounds: 'browserWindow.setBounds',
     setBrowserView: 'browserWindow.setBrowserView',
     setClosable: 'browserWindow.setClosable',
     setContentBounds: 'browserWindow.setContentBounds',
     setContentProtection: 'browserWindow.setContentProtection',
     setContentSize: 'browserWindow.setContentSize',
     setContentView: 'browserWindow.setContentView',
     setDocumentEdited: 'browserWindow.setDocumentEdited',
     setEnabled: 'browserWindow.setEnabled',
     setFocusable: 'browserWindow.setFocusable',
     setFullScreen: 'browserWindow.setFullScreen',
     setFullScreenable: 'browserWindow.setFullScreenable',
     setHasShadow: 'browserWindow.setHasShadow',
     setIcon: 'browserWindow.setIcon',
     setIgnoreMouseEvents: 'browserWindow.setIgnoreMouseEvents',
     setKiosk: 'browserWindow.setKiosk',
     setMaxListeners: 'browserWindow.setMaxListeners',
     setMaximizable: 'browserWindow.setMaximizable',
     setMaximumSize: 'browserWindow.setMaximumSize',
     setMenu: 'browserWindow.setMenu',
     setMenuBarVisibility: 'browserWindow.setMenuBarVisibility',
     setMinimizable: 'browserWindow.setMinimizable',
     setMinimumSize: 'browserWindow.setMinimumSize',
     setMovable: 'browserWindow.setMovable',
     setOpacity: 'browserWindow.setOpacity',
     setOverlayIcon: 'browserWindow.setOverlayIcon',
     setParentWindow: 'browserWindow.setParentWindow',
     setPosition: 'browserWindow.setPosition',
     setProgressBar: 'browserWindow.setProgressBar',
     setRepresentedFilename: 'browserWindow.setRepresentedFilename',
     setResizable: 'browserWindow.setResizable',
     setShape: 'browserWindow.setShape',
     setSheetOffset: 'browserWindow.setSheetOffset',
     setSimpleFullScreen: 'browserWindow.setSimpleFullScreen',
     setSize: 'browserWindow.setSize',
     setSkipTaskbar: 'browserWindow.setSkipTaskbar',
     setThumbarButtons: 'browserWindow.setThumbarButtons',
     setTitle: 'browserWindow.setTitle',
     setTopBrowserView: 'browserWindow.setTopBrowserView',
     setTouchBar: 'browserWindow.setTouchBar',
     setTrafficLightPosition: 'browserWindow.setTrafficLightPosition',
     setVibrancy: 'browserWindow.setVibrancy',
     setVisibleOnAllWorkspaces: 'browserWindow.setVisibleOnAllWorkspaces',
     setWindowButtonVisibility: 'browserWindow.setWindowButtonVisibility',
     show: 'browserWindow.show',
     showDefinitionForSelection: 'browserWindow.showDefinitionForSelection',
     showInactive: 'browserWindow.showInactive',
     toggleDevTools: 'browserWindow.toggleDevTools',
     toggleTabBar: 'browserWindow.toggleTabBar',
     unmaximize: 'browserWindow.unmaximize' },
  electron:
   { clipboard:
      { availableFormats: 'electron.clipboard.availableFormats',
        clear: 'electron.clipboard.clear',
        has: 'electron.clipboard.has',
        read: 'electron.clipboard.read',
        readBookmark: 'electron.clipboard.readBookmark',
        readBuffer: 'electron.clipboard.readBuffer',
        readFindText: 'electron.clipboard.readFindText',
        readHTML: 'electron.clipboard.readHTML',
        readImage: 'electron.clipboard.readImage',
        readRTF: 'electron.clipboard.readRTF',
        readText: 'electron.clipboard.readText',
        write: 'electron.clipboard.write',
        writeBookmark: 'electron.clipboard.writeBookmark',
        writeBuffer: 'electron.clipboard.writeBuffer',
        writeFindText: 'electron.clipboard.writeFindText',
        writeHTML: 'electron.clipboard.writeHTML',
        writeImage: 'electron.clipboard.writeImage',
        writeRTF: 'electron.clipboard.writeRTF',
        writeText: 'electron.clipboard.writeText' },
     contextBridge:
      { exposeInMainWorld: 'electron.contextBridge.exposeInMainWorld',
        internalContextBridge: 'electron.contextBridge.internalContextBridge' },
     crashReporter:
      { addExtraParameter: 'electron.crashReporter.addExtraParameter',
        getCrashesDirectory: 'electron.crashReporter.getCrashesDirectory',
        getLastCrashReport: 'electron.crashReporter.getLastCrashReport',
        getParameters: 'electron.crashReporter.getParameters',
        getUploadToServer: 'electron.crashReporter.getUploadToServer',
        getUploadedReports: 'electron.crashReporter.getUploadedReports',
        removeExtraParameter: 'electron.crashReporter.removeExtraParameter',
        setUploadToServer: 'electron.crashReporter.setUploadToServer',
        start: 'electron.crashReporter.start' },
     desktopCapturer: { getSources: 'electron.desktopCapturer.getSources' },
     ipcRenderer:
      { addListener: 'electron.ipcRenderer.addListener',
        emit: 'electron.ipcRenderer.emit',
        eventNames: 'electron.ipcRenderer.eventNames',
        getMaxListeners: 'electron.ipcRenderer.getMaxListeners',
        invoke: 'electron.ipcRenderer.invoke',
        listenerCount: 'electron.ipcRenderer.listenerCount',
        listeners: 'electron.ipcRenderer.listeners',
        off: 'electron.ipcRenderer.off',
        on: 'electron.ipcRenderer.on',
        once: 'electron.ipcRenderer.once',
        postMessage: 'electron.ipcRenderer.postMessage',
        prependListener: 'electron.ipcRenderer.prependListener',
        prependOnceListener: 'electron.ipcRenderer.prependOnceListener',
        rawListeners: 'electron.ipcRenderer.rawListeners',
        removeAllListeners: 'electron.ipcRenderer.removeAllListeners',
        removeListener: 'electron.ipcRenderer.removeListener',
        send: 'electron.ipcRenderer.send',
        sendSync: 'electron.ipcRenderer.sendSync',
        sendTo: 'electron.ipcRenderer.sendTo',
        sendToHost: 'electron.ipcRenderer.sendToHost',
        setMaxListeners: 'electron.ipcRenderer.setMaxListeners' },
     nativeImage:
      { createEmpty: 'electron.nativeImage.createEmpty',
        createFromBitmap: 'electron.nativeImage.createFromBitmap',
        createFromBuffer: 'electron.nativeImage.createFromBuffer',
        createFromDataURL: 'electron.nativeImage.createFromDataURL',
        createFromNamedImage: 'electron.nativeImage.createFromNamedImage',
        createFromPath: 'electron.nativeImage.createFromPath',
        createThumbnailFromPath: 'electron.nativeImage.createThumbnailFromPath' },
     remote:
      { BaseWindow: 'electron.remote.BaseWindow',
        BrowserView: 'electron.remote.BrowserView',
        BrowserWindow: [Object],
        ImageView: 'electron.remote.ImageView',
        Menu: [Object],
        MenuItem: [Object],
        MessageChannelMain: 'electron.remote.MessageChannelMain',
        Notification: 'electron.remote.Notification',
        TouchBar: 'electron.remote.TouchBar',
        View: 'electron.remote.View',
        WebContentsView: 'electron.remote.WebContentsView',
        __esModule: {},
        app: [Object],
        autoUpdater: [Object],
        clipboard: [Object],
        contentTracing: [Object],
        crashReporter: {},
        createFunctionWithReturnValue: 'electron.remote.createFunctionWithReturnValue',
        desktopCapturer: [Object],
        dialog: [Object],
        getBuiltin: 'electron.remote.getBuiltin',
        getCurrentWebContents: 'electron.remote.getCurrentWebContents',
        getCurrentWindow: 'electron.remote.getCurrentWindow',
        getGlobal: 'electron.remote.getGlobal',
        globalShortcut: [Object],
        inAppPurchase: [Object],
        ipcMain: [Object],
        nativeImage: [Object],
        nativeTheme: [Object],
        net: [Object],
        netLog: [Object],
        powerMonitor: [Object],
        powerSaveBlocker: [Object],
        process: [Object],
        protocol: [Object],
        require: 'electron.remote.require',
        screen: [Object],
        session: [Object],
        shell: [Object],
        systemPreferences: [Object],
        webContents: [Object] },
     shell:
      { beep: 'electron.shell.beep',
        moveItemToTrash: 'electron.shell.moveItemToTrash',
        openExternal: 'electron.shell.openExternal',
        openPath: 'electron.shell.openPath',
        showItemInFolder: 'electron.shell.showItemInFolder' },
     webFrame:
      { addListener: 'electron.webFrame.addListener',
        allowGuestViewElementDefinition: 'electron.webFrame.allowGuestViewElementDefinition',
        clearCache: 'electron.webFrame.clearCache',
        context: 'electron.webFrame.context',
        emit: 'electron.webFrame.emit',
        eventNames: 'electron.webFrame.eventNames',
        executeJavaScript: 'electron.webFrame.executeJavaScript',
        executeJavaScriptInIsolatedWorld: 'electron.webFrame.executeJavaScriptInIsolatedWorld',
        getMaxListeners: 'electron.webFrame.getMaxListeners',
        getResourceUsage: 'electron.webFrame.getResourceUsage',
        getWebFrameId: 'electron.webFrame.getWebFrameId',
        getZoomFactor: 'electron.webFrame.getZoomFactor',
        getZoomLevel: 'electron.webFrame.getZoomLevel',
        insertCSS: 'electron.webFrame.insertCSS',
        insertText: 'electron.webFrame.insertText',
        listenerCount: 'electron.webFrame.listenerCount',
        listeners: 'electron.webFrame.listeners',
        off: 'electron.webFrame.off',
        on: 'electron.webFrame.on',
        once: 'electron.webFrame.once',
        prependListener: 'electron.webFrame.prependListener',
        prependOnceListener: 'electron.webFrame.prependOnceListener',
        rawListeners: 'electron.webFrame.rawListeners',
        removeAllListeners: 'electron.webFrame.removeAllListeners',
        removeInsertedCSS: 'electron.webFrame.removeInsertedCSS',
        removeListener: 'electron.webFrame.removeListener',
        setIsolatedWorldInfo: 'electron.webFrame.setIsolatedWorldInfo',
        setMaxListeners: 'electron.webFrame.setMaxListeners',
        setName: 'electron.webFrame.setName',
        setSpellCheckProvider: 'electron.webFrame.setSpellCheckProvider',
        setVisualZoomLevelLimits: 'electron.webFrame.setVisualZoomLevelLimits',
        setZoomFactor: 'electron.webFrame.setZoomFactor',
        setZoomLevel: 'electron.webFrame.setZoomLevel' } },
  rendererProcess:
   { abort: 'process.abort',
     activateUvLoop: 'process.activateUvLoop',
     addListener: 'process.addListener',
     allowedNodeEnvironmentFlags: 'process.allowedNodeEnvironmentFlags',
     arch: 'process.arch',
     argv: 'process.argv',
     argv0: 'process.argv0',
     assert: 'process.assert',
     binding: 'process.binding',
     chdir: 'process.chdir',
     config: 'process.config',
     cpuUsage: 'process.cpuUsage',
     crash: 'process.crash',
     cwd: 'process.cwd',
     debugPort: 'process.debugPort',
     dlopen: 'process.dlopen',
     domain: 'process.domain',
     emit: 'process.emit',
     emitWarning: 'process.emitWarning',
     env: 'process.env',
     eventNames: 'process.eventNames',
     execArgv: 'process.execArgv',
     execPath: 'process.execPath',
     exit: 'process.exit',
     features: 'process.features',
     getBlinkMemoryInfo: 'process.getBlinkMemoryInfo',
     getCPUUsage: 'process.getCPUUsage',
     getCreationTime: 'process.getCreationTime',
     getHeapStatistics: 'process.getHeapStatistics',
     getIOCounters: 'process.getIOCounters',
     getMaxListeners: 'process.getMaxListeners',
     getProcessMemoryInfo: 'process.getProcessMemoryInfo',
     getSystemMemoryInfo: 'process.getSystemMemoryInfo',
     getSystemVersion: 'process.getSystemVersion',
     getegid: 'process.getegid',
     geteuid: 'process.geteuid',
     getgid: 'process.getgid',
     getgroups: 'process.getgroups',
     getuid: 'process.getuid',
     hang: 'process.hang',
     hasUncaughtExceptionCaptureCallback: 'process.hasUncaughtExceptionCaptureCallback',
     helperExecPath: 'process.helperExecPath',
     hrtime: 'process.hrtime',
     initgroups: 'process.initgroups',
     isMainFrame: 'process.isMainFrame',
     kill: 'process.kill',
     listenerCount: 'process.listenerCount',
     listeners: 'process.listeners',
     log: 'process.log',
     memoryUsage: 'process.memoryUsage',
     moduleLoadList: 'process.moduleLoadList',
     nextTick: 'process.nextTick',
     off: 'process.off',
     on: 'process.on',
     once: 'process.once',
     openStdin: 'process.openStdin',
     pid: 'process.pid',
     platform: 'process.platform',
     ppid: 'process.ppid',
     prependListener: 'process.prependListener',
     prependOnceListener: 'process.prependOnceListener',
     rawListeners: 'process.rawListeners',
     reallyExit: 'process.reallyExit',
     release: 'process.release',
     removeAllListeners: 'process.removeAllListeners',
     removeListener: 'process.removeListener',
     resourceUsage: 'process.resourceUsage',
     resourcesPath: 'process.resourcesPath',
     setFdLimit: 'process.setFdLimit',
     setMaxListeners: 'process.setMaxListeners',
     setUncaughtExceptionCaptureCallback: 'process.setUncaughtExceptionCaptureCallback',
     setegid: 'process.setegid',
     seteuid: 'process.seteuid',
     setgid: 'process.setgid',
     setgroups: 'process.setgroups',
     setuid: 'process.setuid',
     stderr: 'process.stderr',
     stdin: 'process.stdin',
     stdout: 'process.stdout',
     takeHeapSnapshot: 'process.takeHeapSnapshot',
     title: 'process.title',
     type: 'process.type',
     umask: 'process.umask',
     uptime: 'process.uptime',
     version: 'process.version',
     versions: 'process.versions' },
  webContents:
   { addListener: 'webContents.addListener',
     addWorkSpace: 'webContents.addWorkSpace',
     attachToIframe: 'webContents.attachToIframe',
     beginFrameSubscription: 'webContents.beginFrameSubscription',
     canGoBack: 'webContents.canGoBack',
     canGoForward: 'webContents.canGoForward',
     canGoToIndex: 'webContents.canGoToIndex',
     canGoToOffset: 'webContents.canGoToOffset',
     capturePage: 'webContents.capturePage',
     clearHistory: 'webContents.clearHistory',
     closeDevTools: 'webContents.closeDevTools',
     copy: 'webContents.copy',
     copyImageAt: 'webContents.copyImageAt',
     cut: 'webContents.cut',
     decrementCapturerCount: 'webContents.decrementCapturerCount',
     delete: 'webContents.delete',
     destroy: 'webContents.destroy',
     detachFromOuterFrame: 'webContents.detachFromOuterFrame',
     disableDeviceEmulation: 'webContents.disableDeviceEmulation',
     downloadURL: 'webContents.downloadURL',
     emit: 'webContents.emit',
     enableDeviceEmulation: 'webContents.enableDeviceEmulation',
     endFrameSubscription: 'webContents.endFrameSubscription',
     equal: 'webContents.equal',
     eventNames: 'webContents.eventNames',
     executeJavaScript: 'webContents.executeJavaScript',
     executeJavaScriptInIsolatedWorld: 'webContents.executeJavaScriptInIsolatedWorld',
     findInPage: 'webContents.findInPage',
     focus: 'webContents.focus',
     forcefullyCrashRenderer: 'webContents.forcefullyCrashRenderer',
     getActiveIndex: 'webContents.getActiveIndex',
     getAllSharedWorkers: 'webContents.getAllSharedWorkers',
     getBackgroundThrottling: 'webContents.getBackgroundThrottling',
     getFrameRate: 'webContents.getFrameRate',
     getLastWebPreferences: 'webContents.getLastWebPreferences',
     getMaxListeners: 'webContents.getMaxListeners',
     getNativeView: 'webContents.getNativeView',
     getOSProcessId: 'webContents.getOSProcessId',
     getOwnerBrowserWindow: 'webContents.getOwnerBrowserWindow',
     getPrinters: 'webContents.getPrinters',
     getProcessId: 'webContents.getProcessId',
     getTitle: 'webContents.getTitle',
     getType: 'webContents.getType',
     getURL: 'webContents.getURL',
     getUserAgent: 'webContents.getUserAgent',
     getWebPreferences: 'webContents.getWebPreferences',
     getWebRTCIPHandlingPolicy: 'webContents.getWebRTCIPHandlingPolicy',
     getZoomFactor: 'webContents.getZoomFactor',
     getZoomLevel: 'webContents.getZoomLevel',
     goBack: 'webContents.goBack',
     goForward: 'webContents.goForward',
     goToIndex: 'webContents.goToIndex',
     goToOffset: 'webContents.goToOffset',
     incrementCapturerCount: 'webContents.incrementCapturerCount',
     insertCSS: 'webContents.insertCSS',
     insertText: 'webContents.insertText',
     inspectElement: 'webContents.inspectElement',
     inspectServiceWorker: 'webContents.inspectServiceWorker',
     inspectSharedWorker: 'webContents.inspectSharedWorker',
     inspectSharedWorkerById: 'webContents.inspectSharedWorkerById',
     invalidate: 'webContents.invalidate',
     isAudioMuted: 'webContents.isAudioMuted',
     isBeingCaptured: 'webContents.isBeingCaptured',
     isCrashed: 'webContents.isCrashed',
     isCurrentlyAudible: 'webContents.isCurrentlyAudible',
     isDestroyed: 'webContents.isDestroyed',
     isDevToolsFocused: 'webContents.isDevToolsFocused',
     isDevToolsOpened: 'webContents.isDevToolsOpened',
     isFocused: 'webContents.isFocused',
     isLoading: 'webContents.isLoading',
     isLoadingMainFrame: 'webContents.isLoadingMainFrame',
     isOffscreen: 'webContents.isOffscreen',
     isPainting: 'webContents.isPainting',
     isWaitingForResponse: 'webContents.isWaitingForResponse',
     length: 'webContents.length',
     listenerCount: 'webContents.listenerCount',
     listeners: 'webContents.listeners',
     loadFile: 'webContents.loadFile',
     loadURL: 'webContents.loadURL',
     off: 'webContents.off',
     on: 'webContents.on',
     once: 'webContents.once',
     openDevTools: 'webContents.openDevTools',
     paste: 'webContents.paste',
     pasteAndMatchStyle: 'webContents.pasteAndMatchStyle',
     postMessage: 'webContents.postMessage',
     prependListener: 'webContents.prependListener',
     prependOnceListener: 'webContents.prependOnceListener',
     print: 'webContents.print',
     printToPDF: 'webContents.printToPDF',
     rawListeners: 'webContents.rawListeners',
     redo: 'webContents.redo',
     reload: 'webContents.reload',
     reloadIgnoringCache: 'webContents.reloadIgnoringCache',
     removeAllListeners: 'webContents.removeAllListeners',
     removeInsertedCSS: 'webContents.removeInsertedCSS',
     removeListener: 'webContents.removeListener',
     removeWorkSpace: 'webContents.removeWorkSpace',
     replace: 'webContents.replace',
     replaceMisspelling: 'webContents.replaceMisspelling',
     savePage: 'webContents.savePage',
     selectAll: 'webContents.selectAll',
     send: 'webContents.send',
     sendInputEvent: 'webContents.sendInputEvent',
     sendToFrame: 'webContents.sendToFrame',
     setAudioMuted: 'webContents.setAudioMuted',
     setBackgroundThrottling: 'webContents.setBackgroundThrottling',
     setDevToolsWebContents: 'webContents.setDevToolsWebContents',
     setEmbedder: 'webContents.setEmbedder',
     setFrameRate: 'webContents.setFrameRate',
     setIgnoreMenuShortcuts: 'webContents.setIgnoreMenuShortcuts',
     setMaxListeners: 'webContents.setMaxListeners',
     setUserAgent: 'webContents.setUserAgent',
     setVisualZoomLevelLimits: 'webContents.setVisualZoomLevelLimits',
     setWebRTCIPHandlingPolicy: 'webContents.setWebRTCIPHandlingPolicy',
     setZoomFactor: 'webContents.setZoomFactor',
     setZoomLevel: 'webContents.setZoomLevel',
     showDefinitionForSelection: 'webContents.showDefinitionForSelection',
     startDrag: 'webContents.startDrag',
     startPainting: 'webContents.startPainting',
     stop: 'webContents.stop',
     stopFindInPage: 'webContents.stopFindInPage',
     stopPainting: 'webContents.stopPainting',
     tabTraverse: 'webContents.tabTraverse',
     takeHeapSnapshot: 'webContents.takeHeapSnapshot',
     toggleDevTools: 'webContents.toggleDevTools',
     undo: 'webContents.undo',
     unselect: 'webContents.unselect' } }
2022-01-27T20:01:02.548Z INFO webdriver: COMMAND setTimeouts(5000, 5000, 5000)
2022-01-27T20:01:02.548Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/timeouts
2022-01-27T20:01:02.548Z INFO webdriver: DATA { implicit: 5000, pageLoad: 5000, script: 5000 }
2022-01-27T20:01:02.558Z INFO webdriver: COMMAND electron.ipcRenderer.sendSync("SPECTRON_FAKE_DIALOG/SEND", <object>)
2022-01-27T20:01:02.558Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:02.558Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/execute/sync
2022-01-27T20:01:02.558Z INFO webdriver: DATA { script:
   'return (function callRenderApi(moduleName, api, args, requireName) {\n  const module = window[requireName](\'electron\')[moduleName];\n  if (typeof module[api] === \'function\') {\n    return module[api].apply(module, args);\n  } else {\n    return module[api];\n  }\n}).apply(null, arguments)',
  args:
   [ 'ipcRenderer',
     'sendSync',
     [ 'SPECTRON_FAKE_DIALOG/SEND', [Array] ],
     'require' ] }
2022-01-27T20:01:02.559Z INFO webdriver: COMMAND waitUntilWindowLoaded()
2022-01-27T20:01:02.559Z INFO webdriver: COMMAND webContents.isLoading()
2022-01-27T20:01:02.559Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:02.560Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/execute/sync
2022-01-27T20:01:02.560Z INFO webdriver: DATA { script:
   'return (function callWebContentsApi(name, args, requireName) {\n  const webContents = window[requireName](\n    \'electron\'\n  ).remote.getCurrentWebContents();\n  return webContents[name].apply(webContents, args);\n}).apply(null, arguments)',
  args: [ 'isLoading', [], 'require' ] }
2022-01-27T20:01:02.564Z INFO webdriver: RESULT true
2022-01-27T20:01:02.564Z INFO webdriver: RESULT true
2022-01-27T20:01:02.567Z INFO webdriver: RESULT false
2022-01-27T20:01:02.568Z INFO webdriver: RESULT false
2022-01-27T20:01:02.568Z INFO webdriver: RESULT undefined
2022-01-27T20:01:02.569Z INFO webdriver: COMMAND findElement("css selector", "#qa_db_li_import")
2022-01-27T20:01:02.570Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/element
2022-01-27T20:01:02.570Z INFO webdriver: DATA { using: 'css selector', value: '#qa_db_li_import' }
2022-01-27T20:01:02.583Z INFO webdriver: RESULT { 'element-6066-11e4-a52e-4f735466cecf': 'a2e4dca5-34ef-4511-985e-c309618c8e3b' }
2022-01-27T20:01:02.589Z INFO webdriver: COMMAND elementClick("a2e4dca5-34ef-4511-985e-c309618c8e3b")
2022-01-27T20:01:02.589Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/element/a2e4dca5-34ef-4511-985e-c309618c8e3b/click
2022-01-27T20:01:02.618Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:02.618Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/execute/sync
2022-01-27T20:01:02.618Z INFO webdriver: DATA { script:
   '!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.resq=e():(t.window=t.window||{},t.window.resq=e())}(window,(function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=16)}([function(t,e,r){"use strict";r.d(e,"a",(function(){return m})),r.d(e,"d",(function(){return j})),r.d(e,"b",(function(){return M})),r.d(e,"c",(function(){return P}));var n=r(1),o=r.n(n),u=r(14),i=r.n(u),c=r(2),f=r.n(c),s=r(15),a=r.n(s);function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}var p=Array.isArray,d=Object.keys;function x(t){return"function"==typeof t}function y(t){return t instanceof HTMLElement||t instanceof Text}function h(t){return"object"===f()(t)&&!p(t)}function b(t){if(!t||"string"==typeof t)return t;var e=function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){i()(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}({},t);return delete e.children,e}function v(t,e){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return!(!p(t)||!p(e))&&(r?t.length===e.length&&!t.find((function(t){return!e.includes(t)})):t.some((function(t){return e.includes(t)})))}function _(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=[];if(!d(t).length)return!0;if(null===e||!d(e).length)return!1;if(r)return a()(t,e);var o=d(t).filter((function(t){return d(e).includes(t)}));return o.forEach((function(r){h(t[r])&&h(e[r])&&(n=n.concat(_(t[r],e[r]))),(t[r]===e[r]||v(t[r],e[r]))&&n.push(e)})),n.length>0&&n.filter((function(t){return t})).length===o.length}function m(t){var e,r={children:[]};if(!t)return r;r.name=x(e=t.type)?e.displayName||e.name:e,r.props=b(t.memoizedProps),r.state=function(t){if(t){var e=t.baseState;return e||t}}(t.memoizedState);var n=t.child;if(n)for(r.children.push(n);n.sibling;)r.children.push(n.sibling),n=n.sibling;return r.children=r.children.map((function(t){return m(t)})),x(t.type)&&function(t){return t.children.length>1}(r)?(r.node=function(t){return t.children.map((function(t){return t.node})).filter((function(t){return!!t}))}(r),r.isFragment=!0):r.node=function(t){return y(t.stateNode)?t.stateNode:t.child&&y(t.child.stateNode)?t.child.stateNode:null}(t),r}function g(t){for(;t.length;){var e=t.shift();if(e.node)return e.node;e.children&&Array.isArray(e.children)&&t.push.apply(t,o()(e.children))}}function O(t,e){for(var r=[];t.length;){var n=t.shift().children;n&&Array.isArray(n)&&n.forEach((function(n){e(n)&&(!n.node&&Array.isArray(n.children)&&(n.node=g(n.children.concat([]))),r.push(n)),t.push(n)}))}return r}function w(t,e){var r=function(t){if(t){var e=t.split("(");return 1===e.length?t:e.find((function(t){return t.includes(")")})).replace(/\\)*/g,"")}}(e);return new RegExp("^"+t.split("*").map((function(t){return t.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g,"\\\\$1")})).join(".+")+"$").test(r)}function j(t,e){var r=arguments.length>3?arguments[3]:void 0;return t.reduce((function(t,e){return t.concat(O(t,r&&"function"==typeof r?r:function(t){return"string"==typeof t.name?w(e,t.name):null!==t.name&&"object"===f()(t.name)&&w(e,t.name.displayName)}))}),[e])}function M(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return x(r)?(console.warn("Functions are not supported as filter matchers"),[]):t.filter((function(t){return h(r)&&_(r,t[e],n)||p(r)&&v(r,t[e],n)||t[e]===r}))}function P(t){if(t.hasOwnProperty("_reactRootContainer"))return t._reactRootContainer._internalRoot.current;var e=Object.keys(t).find((function(t){return t.startsWith("__reactInternalInstance")||t.startsWith("__reactFiber")}));return e?t[e]:void 0}},function(t,e,r){var n=r(17),o=r(18),u=r(19),i=r(20);t.exports=function(t){return n(t)||o(t)||u(t)||i()},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){function r(e){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?(t.exports=r=function(t){return typeof t},t.exports.default=t.exports,t.exports.__esModule=!0):(t.exports=r=function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t.exports.default=t.exports,t.exports.__esModule=!0),r(e)}t.exports=r,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){function r(e){return t.exports=r=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},t.exports.default=t.exports,t.exports.__esModule=!0,r(e)}t.exports=r,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){function r(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}t.exports=function(t,e,n){return e&&r(t.prototype,e),n&&r(t,n),t},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){function r(e,n){return t.exports=r=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},t.exports.default=t.exports,t.exports.__esModule=!0,r(e,n)}t.exports=r,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,r){var n=r(6);t.exports=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&n(t,e)},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,r){var n=r(3),o=r(6),u=r(22),i=r(23);function c(e){var r="function"==typeof Map?new Map:void 0;return t.exports=c=function(t){if(null===t||!u(t))return t;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==r){if(r.has(t))return r.get(t);r.set(t,e)}function e(){return i(t,arguments,n(this).constructor)}return e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),o(e,t)},t.exports.default=t.exports,t.exports.__esModule=!0,c(e)}t.exports=c,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(t){"object"==typeof window&&(r=window)}t.exports=r},function(t,e){t.exports=function(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,r){"use strict";(function(t){r.d(e,"a",(function(){return o}));var n=r(0);function o(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5e3,r=arguments.length>1?arguments[1]:void 0;if(t.isReactLoaded)return Promise.resolve("React already loaded");var o=function(){var t=document.createTreeWalker(document);if(r)return document.querySelector(r);for(;t.nextNode();)if(t.currentNode.hasOwnProperty("_reactRootContainer"))return t.currentNode};return new Promise((function(r,u){var i=!1;!function e(){var u=o();if(u)return t.isReactLoaded=!0,t.rootReactElement=Object(n.c)(u),r();i||setTimeout(e,200)}(),setTimeout((function(){i=!0,u("Timed out")}),e)}))}}).call(this,r(9))},function(t,e,r){"use strict";r.d(e,"a",(function(){return g}));var n=r(1),o=r.n(n),u=r(4),i=r.n(u),c=r(5),f=r.n(c),s=r(7),a=r.n(s),l=r(13),p=r.n(l),d=r(3),x=r.n(d),y=r(8),h=r.n(y),b=r(0);function v(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=x()(t);if(e){var o=x()(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return p()(this,r)}}var _=function(t){a()(r,t);var e=v(r);function r(t){return i()(this,r),t||(t=[]),e.call.apply(e,[this].concat(o()(t)))}return f()(r,[{key:"byProps",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{exact:!1},n=e.exact,o=Object(b.b)(this,"props",t,n);return new r(o)}},{key:"byState",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{exact:!1},n=e.exact,o=Object(b.b)(this,"state",t,n);return new r(o)}}]),r}(h()(Array)),m=function(t){a()(r,t);var e=v(r);function r(t,n){var o;for(var u in i()(this,r),(o=e.call(this,t))._nodes=n,t)o[u]=t[u];return o}return f()(r,[{key:"byProps",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{exact:!1},n=e.exact,o=Object(b.b)(this._nodes,"props",t,n)[0];return new r(o,this._nodes)}},{key:"byState",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{exact:!1},n=e.exact,o=Object(b.b)(this._nodes,"state",t,n)[0];return new r(o,this._nodes)}}]),r}(h()(Object)),g=function(){function t(e,r){i()(this,t),this.selectors=e.split(" ").filter((function(t){return!!t})).map((function(t){return t.trim()})),this.rootComponent=r,this.tree=Object(b.a)(this.rootComponent)}return f()(t,[{key:"find",value:function(){return this.nodes=new _(Object(b.d)(this.selectors,this.tree,!0)),new m(this.nodes[0],this.nodes)}},{key:"findAll",value:function(){return new _(Object(b.d)(this.selectors,this.tree))}}]),t}()},function(t,e,r){var n=r(2).default,o=r(21);t.exports=function(t,e){return!e||"object"!==n(e)&&"function"!=typeof e?o(t):e},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,r){"use strict";var n=Array.isArray,o=Object.keys,u=Object.prototype.hasOwnProperty;t.exports=function t(e,r){if(e===r)return!0;if(e&&r&&"object"==typeof e&&"object"==typeof r){var i,c,f,s=n(e),a=n(r);if(s&&a){if((c=e.length)!=r.length)return!1;for(i=c;0!=i--;)if(!t(e[i],r[i]))return!1;return!0}if(s!=a)return!1;var l=e instanceof Date,p=r instanceof Date;if(l!=p)return!1;if(l&&p)return e.getTime()==r.getTime();var d=e instanceof RegExp,x=r instanceof RegExp;if(d!=x)return!1;if(d&&x)return e.toString()==r.toString();var y=o(e);if((c=y.length)!==o(r).length)return!1;for(i=c;0!=i--;)if(!u.call(r,y[i]))return!1;for(i=c;0!=i--;)if(!t(e[f=y[i]],r[f]))return!1;return!0}return e!=e&&r!=r}},function(t,e,r){"use strict";r.r(e),function(t){r.d(e,"resq$",(function(){return c})),r.d(e,"resq$$",(function(){return f}));var n=r(12),o=r(11);r.d(e,"waitToLoadReact",(function(){return o.a}));var u=r(0);function i(e,r,o){if(!o&&!t.isReactLoaded)throw new Error("Could not find the root element of your application");var i=t.rootReactElement;if(o instanceof HTMLElement&&(i=Object(u.c)(o)),!i)throw new Error("Could not find instance of React in given element");return new n.a(e,i)[r]()}function c(t,e){return i(t,"find",e)}function f(t,e){return i(t,"findAll",e)}}.call(this,r(9))},function(t,e,r){var n=r(10);t.exports=function(t){if(Array.isArray(t))return n(t)},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,r){var n=r(10);t.exports=function(t,e){if(t){if("string"==typeof t)return n(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(t,e):void 0}},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(t){if(void 0===t)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return t},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(t){return-1!==Function.toString.call(t).indexOf("[native code]")},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,r){var n=r(6),o=r(24);function u(e,r,i){return o()?(t.exports=u=Reflect.construct,t.exports.default=t.exports,t.exports.__esModule=!0):(t.exports=u=function(t,e,r){var o=[null];o.push.apply(o,e);var u=new(Function.bind.apply(t,o));return r&&n(u,r.prototype),u},t.exports.default=t.exports,t.exports.__esModule=!0),u.apply(null,arguments)}t.exports=u,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}},t.exports.default=t.exports,t.exports.__esModule=!0}])}));',
  args: [] }
2022-01-27T20:01:02.661Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:02.661Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/execute/sync
2022-01-27T20:01:02.661Z INFO webdriver: DATA { script:
   'return (function waitToLoadReact() {\n    window.resq.waitToLoadReact();\n}).apply(null, arguments)',
  args: [] }
2022-01-27T20:01:02.748Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:02.748Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/execute/sync
2022-01-27T20:01:02.748Z INFO webdriver: DATA { script:
   'return (function react$(selector, props, state, reactElement) {\n    props = props || {};\n    state = state || {};\n    let element = window.resq.resq$(selector, reactElement);\n    if (Object.keys(props).length) {\n        element = element.byProps(props);\n    }\n    if (Object.keys(state).length) {\n        element = element.byState(state);\n    }\n    if (!element.name) {\n        return { message: `React element with selector "${selector}" wasn\'t found` };\n    }\n    return element.isFragment && element.node\n        ? element.node[0]\n        : element.node;\n}).apply(null, arguments)',
  args: [ 'MainView', {}, {} ] }
2022-01-27T20:01:04.236Z INFO webdriver: RESULT { 'element-6066-11e4-a52e-4f735466cecf': '16a6bb50-2f27-4297-9457-615345db67a8' }
2022-01-27T20:01:04.250Z INFO webdriver: COMMAND findElement("css selector", "#qa_db_ili_projects")
2022-01-27T20:01:04.251Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/element
2022-01-27T20:01:04.251Z INFO webdriver: DATA { using: 'css selector', value: '#qa_db_ili_projects' }
2022-01-27T20:01:05.569Z INFO webdriver: RESULT { 'element-6066-11e4-a52e-4f735466cecf': '9089c4f9-501c-4060-bce9-b54386e4bc55' }
2022-01-27T20:01:05.570Z INFO webdriver: COMMAND getElementText("9089c4f9-501c-4060-bce9-b54386e4bc55")
2022-01-27T20:01:05.570Z INFO webdriver: [GET] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/element/9089c4f9-501c-4060-bce9-b54386e4bc55/text
2022-01-27T20:01:05.580Z INFO webdriver: RESULT Total Projects
11
2022-01-27T20:01:05.581Z INFO webdriver: COMMAND findElement("css selector", "#qa_db_ili_requirements")
2022-01-27T20:01:05.581Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/element
2022-01-27T20:01:05.581Z INFO webdriver: DATA { using: 'css selector', value: '#qa_db_ili_requirements' }
2022-01-27T20:01:05.587Z INFO webdriver: RESULT { 'element-6066-11e4-a52e-4f735466cecf': '37430aef-df45-4b33-ac79-2b9b7f900bd4' }
2022-01-27T20:01:05.588Z INFO webdriver: COMMAND getElementText("37430aef-df45-4b33-ac79-2b9b7f900bd4")
2022-01-27T20:01:05.588Z INFO webdriver: [GET] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/element/37430aef-df45-4b33-ac79-2b9b7f900bd4/text
2022-01-27T20:01:05.597Z INFO webdriver: RESULT Total Requirements
156
2022-01-27T20:01:05.597Z INFO webdriver: COMMAND findElement("css selector", "#qa_db_ili_formalized")
2022-01-27T20:01:05.598Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/element
2022-01-27T20:01:05.598Z INFO webdriver: DATA { using: 'css selector', value: '#qa_db_ili_formalized' }
2022-01-27T20:01:05.604Z INFO webdriver: RESULT { 'element-6066-11e4-a52e-4f735466cecf': 'ecf751ee-147b-4781-a37d-c9b54656d7e1' }
2022-01-27T20:01:05.605Z INFO webdriver: COMMAND getElementText("ecf751ee-147b-4781-a37d-c9b54656d7e1")
2022-01-27T20:01:05.605Z INFO webdriver: [GET] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/element/ecf751ee-147b-4781-a37d-c9b54656d7e1/text
2022-01-27T20:01:05.614Z INFO webdriver: RESULT Formalized Requirements
97.44 %
2022-01-27T20:01:05.614Z INFO webdriver: COMMAND findElement("css selector", "#qa_db_ili_sysComps")
2022-01-27T20:01:05.614Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/element
2022-01-27T20:01:05.614Z INFO webdriver: DATA { using: 'css selector', value: '#qa_db_ili_sysComps' }
2022-01-27T20:01:05.621Z INFO webdriver: RESULT { 'element-6066-11e4-a52e-4f735466cecf': 'd0e30b89-7a5f-4cca-8c3a-cf95bacaa050' }
2022-01-27T20:01:05.623Z INFO webdriver: COMMAND getElementText("d0e30b89-7a5f-4cca-8c3a-cf95bacaa050")
2022-01-27T20:01:05.623Z INFO webdriver: [GET] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/element/d0e30b89-7a5f-4cca-8c3a-cf95bacaa050/text
2022-01-27T20:01:05.632Z INFO webdriver: RESULT System Components
28
2022-01-27T20:01:05.632Z INFO webdriver: COMMAND findElement("css selector", "#qa_db_ili_reqSize")
2022-01-27T20:01:05.632Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/element
2022-01-27T20:01:05.632Z INFO webdriver: DATA { using: 'css selector', value: '#qa_db_ili_reqSize' }
2022-01-27T20:01:05.638Z INFO webdriver: RESULT { 'element-6066-11e4-a52e-4f735466cecf': '51111e8a-5c18-4a81-860c-83c47ffa3c1a' }
2022-01-27T20:01:05.639Z INFO webdriver: COMMAND getElementText("51111e8a-5c18-4a81-860c-83c47ffa3c1a")
2022-01-27T20:01:05.639Z INFO webdriver: [GET] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/element/51111e8a-5c18-4a81-860c-83c47ffa3c1a/text
2022-01-27T20:01:05.648Z INFO webdriver: RESULT Requirement Size
14052 bytes
2022-01-27T20:01:05.649Z INFO webdriver: COMMAND electron.remote.app.quit()
2022-01-27T20:01:05.649Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:05.649Z INFO webdriver: [POST] http://127.0.0.1:9515/session/5638cfaccb02a4bce430cc623b15e174/execute/sync
2022-01-27T20:01:05.649Z INFO webdriver: DATA { script:
   'return (function callMainApi(moduleName, api, args, requireName) {\n  let module = window[requireName](\'electron\').remote;\n  if (moduleName) {\n    module = module[moduleName];\n  }\n  if (typeof module[api] === \'function\') {\n    return module[api].apply(module, args);\n  } else {\n    return module[api];\n  }\n}).apply(null, arguments)',
  args: [ 'app', 'quit', [], 'require' ] }
2022-01-27T20:01:05.766Z INFO webdriver: RESULT null
2022-01-27T20:01:06.900Z INFO webdriver: Initiate new session using the WebDriver protocol
2022-01-27T20:01:06.901Z INFO webdriver: [POST] http://127.0.0.1:9515/session
2022-01-27T20:01:06.901Z INFO webdriver: DATA { capabilities:
   { alwaysMatch: { 'goog:chromeOptions': [Object] },
     firstMatch: [ {} ] },
  desiredCapabilities:
   { 'goog:chromeOptions':
      { binary:
         '/Users/ktrinh/fret/sqa9/fret-electron/node_modules/spectron/lib/launcher.js',
        args: [Array],
        debuggerAddress: undefined,
        windowTypes: [Array] } } }
2022-01-27T20:01:07.500Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:07.501Z INFO webdriver: [POST] http://127.0.0.1:9515/session/9b3022e6c9ec0453a3bbe18bf107e473/execute/sync
2022-01-27T20:01:07.501Z INFO webdriver: DATA { script:
   'return (function (requireName) {\n    return typeof window[requireName] === \'function\';\n  }).apply(null, arguments)',
  args: [ 'require' ] }
2022-01-27T20:01:08.295Z INFO webdriver: RESULT true
2022-01-27T20:01:08.295Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:08.296Z INFO webdriver: [POST] http://127.0.0.1:9515/session/9b3022e6c9ec0453a3bbe18bf107e473/execute/sync
2022-01-27T20:01:08.296Z INFO webdriver: DATA { script:
   'return (function (requireName) {\n    const process = window[requireName](\'process\');\n    if (process != null && process.versions != null) {\n      return process.versions.electron;\n    }\n  }).apply(null, arguments)',
  args: [ 'require' ] }
2022-01-27T20:01:08.300Z INFO webdriver: RESULT 11.5.0
2022-01-27T20:01:08.313Z INFO webdriver: COMMAND setTimeouts(5000, 5000, 5000)
2022-01-27T20:01:08.313Z INFO webdriver: [POST] http://127.0.0.1:9515/session/9b3022e6c9ec0453a3bbe18bf107e473/timeouts
2022-01-27T20:01:08.313Z INFO webdriver: DATA { implicit: 5000, pageLoad: 5000, script: 5000 }
2022-01-27T20:01:08.331Z INFO webdriver: COMMAND electron.ipcRenderer.sendSync("SPECTRON_FAKE_DIALOG/SEND", <object>)
2022-01-27T20:01:08.331Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:08.331Z INFO webdriver: [POST] http://127.0.0.1:9515/session/9b3022e6c9ec0453a3bbe18bf107e473/execute/sync
2022-01-27T20:01:08.331Z INFO webdriver: DATA { script:
   'return (function callRenderApi(moduleName, api, args, requireName) {\n  const module = window[requireName](\'electron\')[moduleName];\n  if (typeof module[api] === \'function\') {\n    return module[api].apply(module, args);\n  } else {\n    return module[api];\n  }\n}).apply(null, arguments)',
  args:
   [ 'ipcRenderer',
     'sendSync',
     [ 'SPECTRON_FAKE_DIALOG/SEND', [Array] ],
     'require' ] }
2022-01-27T20:01:08.332Z INFO webdriver: COMMAND waitUntilWindowLoaded()
2022-01-27T20:01:08.332Z INFO webdriver: COMMAND webContents.isLoading()
2022-01-27T20:01:08.332Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:08.332Z INFO webdriver: [POST] http://127.0.0.1:9515/session/9b3022e6c9ec0453a3bbe18bf107e473/execute/sync
2022-01-27T20:01:08.332Z INFO webdriver: DATA { script:
   'return (function callWebContentsApi(name, args, requireName) {\n  const webContents = window[requireName](\n    \'electron\'\n  ).remote.getCurrentWebContents();\n  return webContents[name].apply(webContents, args);\n}).apply(null, arguments)',
  args: [ 'isLoading', [], 'require' ] }
2022-01-27T20:01:08.338Z INFO webdriver: RESULT true
2022-01-27T20:01:08.338Z INFO webdriver: RESULT true
2022-01-27T20:01:08.342Z INFO webdriver: RESULT false
2022-01-27T20:01:08.342Z INFO webdriver: RESULT false
2022-01-27T20:01:08.342Z INFO webdriver: RESULT undefined
2022-01-27T20:01:08.342Z INFO webdriver: COMMAND findElement("css selector", "#qa_db_li_import")
2022-01-27T20:01:08.342Z INFO webdriver: [POST] http://127.0.0.1:9515/session/9b3022e6c9ec0453a3bbe18bf107e473/element
2022-01-27T20:01:08.342Z INFO webdriver: DATA { using: 'css selector', value: '#qa_db_li_import' }
2022-01-27T20:01:08.351Z INFO webdriver: RESULT { 'element-6066-11e4-a52e-4f735466cecf': '44973f58-51cc-4597-811e-e65c08bf25d8' }
2022-01-27T20:01:08.353Z INFO webdriver: COMMAND elementClick("44973f58-51cc-4597-811e-e65c08bf25d8")
2022-01-27T20:01:08.353Z INFO webdriver: [POST] http://127.0.0.1:9515/session/9b3022e6c9ec0453a3bbe18bf107e473/element/44973f58-51cc-4597-811e-e65c08bf25d8/click
2022-01-27T20:01:08.400Z INFO webdriver: COMMAND findElement("css selector", "#qa_db_li_table")
2022-01-27T20:01:08.400Z INFO webdriver: [POST] http://127.0.0.1:9515/session/9b3022e6c9ec0453a3bbe18bf107e473/element
2022-01-27T20:01:08.401Z INFO webdriver: DATA { using: 'css selector', value: '#qa_db_li_table' }
2022-01-27T20:01:08.429Z INFO webdriver: RESULT { 'element-6066-11e4-a52e-4f735466cecf': 'c2dbc94e-55ed-4c13-a632-09cae8bef1a5' }
2022-01-27T20:01:08.430Z INFO webdriver: COMMAND elementClick("c2dbc94e-55ed-4c13-a632-09cae8bef1a5")
2022-01-27T20:01:08.430Z INFO webdriver: [POST] http://127.0.0.1:9515/session/9b3022e6c9ec0453a3bbe18bf107e473/element/c2dbc94e-55ed-4c13-a632-09cae8bef1a5/click
2022-01-27T20:01:11.871Z INFO webdriver: COMMAND findElement("css selector", "#qa_tbl_title")
2022-01-27T20:01:11.871Z INFO webdriver: [POST] http://127.0.0.1:9515/session/9b3022e6c9ec0453a3bbe18bf107e473/element
2022-01-27T20:01:11.871Z INFO webdriver: DATA { using: 'css selector', value: '#qa_tbl_title' }
2022-01-27T20:01:11.882Z INFO webdriver: RESULT { 'element-6066-11e4-a52e-4f735466cecf': '357bc48b-5508-4cb0-86fe-33b02195eaf3' }
2022-01-27T20:01:11.883Z INFO webdriver: COMMAND getElementText("357bc48b-5508-4cb0-86fe-33b02195eaf3")
2022-01-27T20:01:11.884Z INFO webdriver: [GET] http://127.0.0.1:9515/session/9b3022e6c9ec0453a3bbe18bf107e473/element/357bc48b-5508-4cb0-86fe-33b02195eaf3/text
2022-01-27T20:01:11.898Z INFO webdriver: RESULT Requirements: All Projects
2022-01-27T20:01:11.900Z INFO webdriver: COMMAND electron.remote.app.quit()
2022-01-27T20:01:11.901Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2022-01-27T20:01:11.901Z INFO webdriver: [POST] http://127.0.0.1:9515/session/9b3022e6c9ec0453a3bbe18bf107e473/execute/sync
2022-01-27T20:01:11.901Z INFO webdriver: DATA { script:
   'return (function callMainApi(moduleName, api, args, requireName) {\n  let module = window[requireName](\'electron\').remote;\n  if (moduleName) {\n    module = module[moduleName];\n  }\n  if (typeof module[api] === \'function\') {\n    return module[api].apply(module, args);\n  } else {\n    return module[api];\n  }\n}).apply(null, arguments)',
  args: [ 'app', 'quit', [], 'require' ] }
2022-01-27T20:01:12.011Z INFO webdriver: RESULT null
